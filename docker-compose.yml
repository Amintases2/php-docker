version: '3'
services:

  ##############################################
  # PHP
  ##############################################
  php:
    build:
      context: docker/php
      dockerfile: Dockerfile
      target: base
    restart: always
    volumes:
      - ./src:/var/www
    extra_hosts:
      - host.docker.internal:host-gateway

  ##############################################
  # CRON
  ##############################################
  scheduler:
    build:
      context: docker/php
      dockerfile: Dockerfile
      target: scheduler
    restart: always
    volumes:
      - ./src:/var/www

  ##############################################
  # NGINX
  ##############################################
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www
      - ./docker/logs:/var/log/nginx
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php

  ##############################################
  # MYSQL
  ##############################################
  db:
    image: mysql:8
    restart: always
    volumes:
    - ./docker/db/data:/var/lib/mysql
    - ./docker/db/my_db.sql:/my_db.sql
    - ./docker/logs:/var/log/mysql
    - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
    - ./docker/db/scripts:/docker-entrypoint-initdb.d
    # - ./docker/db/sql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    # command: docker-entrypoint-initdb.d/entrypoint.sh
    # command: --init-file /docker-entrypoint-initdb.d/setup.sql

  ##############################################
  # PMA
  ##############################################
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
        - "8080:80"
    links:
        - db
    environment:
        PMA_HOST: db
        PMA_PORT: 3306
        PMA_ARBITRARY: 1
    volumes:
        - ./docker/phpmyadmin/sessions:/sessions

  ##############################################
  # Elasticsearch
  ##############################################
  elasticsearch:
    image: elasticsearch:${ELASTIC_VERSION}
    depends_on:
      - php
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
      - "node.name=cluster1-node1"
      - "xpack.license.self_generated.type=basic"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./docker/logs:/usr/share/elasticsearch/logs

  ##############################################
  # Kibana
  ##############################################
  kibana:
    image: kibana:${ELASTIC_VERSION}
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  ##############################################
  # Logstash
  ##############################################
  logstash:
    build: 
      context: ./docker/logstash
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
        DB_DATABASE: ${DB_DATABASE}
    restart: always
    volumes:
      - './docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml'
      - './docker/logstash/pipeline:/usr/share/logstash/pipeline'
      - './docker/logstash/lastrun:/root/.logstash_jdbc_last_run'
    ports:
      - '5001:5001'
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
    depends_on:
      - elasticsearch
      - db